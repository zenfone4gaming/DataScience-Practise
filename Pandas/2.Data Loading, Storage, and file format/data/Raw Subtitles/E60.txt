Sanyam Bhutani  0:13  
Hey, this is Sanyam Bhutani and you're listening to "Chai Time Data Science" podcast for data science enthusiasts, where I interview practitioners and researchers and Kagglers about their journey, experience, and talk all things about data science.

Sanyam Bhutani  0:45  
Hello, and welcome to another episode of the "Chai Time Data Science" show. In this episode, I interview a machine learning hero who's been inspiring and empowering many, many future heroes through their open source work Ines Montani, co founder of explosion the company behind spacy prodigy and thinq.ai. Yes, these are open source frameworks. If you've been living under a rock spacey is a open source framework for industrial strength, natural processing in Python. That's the headline of the framework or motto of the framework. We, of course, talk about all of the amazing work that is, and the team at exclusion has been doing her journey into the field of programming her journey into the field of NLP and her journey at explosion. We talk about all these things, all these three things along with all of the amazing work that exclusion has been putting out. Yes, spacey, prodigy and think.ai, think.ai is the latest framework that has been put out. We also talk a lot about open source development and the NLP industry. All of these amazing things in just one single podcast. I'm really excited to be releasing this and I hope you enjoy the conversation as much as I did. Two quick reminders to the audience please remember to subscribe to my newsletter to stay up to date with whenever the written blog posts or the newer episodes come out. And if you are a non native English speaker, please remember to enable the subtitles on YouTube because those are manually checked. And I hope they help your watching experience. Without further ado, here is my interview with Ines Montani, please enjoy the show.

Sanyam Bhutani  2:46  
Hi everyone, I have a person on the show who's not just a machine learning hero but also creating machine learning heroes in the NLP domain, Ines thank you so much for joining me on the podcast.

Ines Montani  2:55  
Well, thanks for having me.

Sanyam Bhutani  2:57  
Really excited to be talking to you. I want to start by talking about your journey, I read that you started coding right at the age of 11. Could you tell us about your journey? What led you to being interested in programming and creating websites?

Ines Montani  3:11  
Yeah, so I don't know. It just happened. My parents got a computer. And it was kind of a coincidence, because my dad knew some guy from work. And he was like, oh, I have a computer do you want on? And he's like, okay, if it's, if it's cheap, can you help me with it fine. And then we had a computer and I decided I was really into it. I was always into writing so that I would write my own magazines in Microsoft Word. So that's, that was kind of what I did as a teenager for fun. And then I realised oh, cool, I can actually save this word document as an HTML page. And then I can upload that onto the internet. Whoa. And so that's kind of how that started. And I was very fascinating. And then I, I just started exploring more of like, how the websites work. So I was kind of, I was a bit yeah, I guess I wasn't really the typical nerdy teenager but like, I definitely I didn't have that many friends and I just mostly met people on the internet and they just kind of spend a lot of time in front of a computer when I was young.

Sanyam Bhutani  4:03  
How did you go about learning all of these amazing things? It's so easy now, but I'm just curious back in the day, how did you go about it?

Ines Montani  4:09  
I mean, it's funny because sometimes people some people actually say it was much easier back in the day, because you had like, you didn't have this whole like stack and complicated things, right? You just, you know, back in the day, you could like right click on an ad on a website, and like, look at the HTML and then copy paste that and adjust it now. You can't I mean, you could still build like websites, the old school way. But like, often people are like, well, if you I mean, if you want to learn that web development today, it's pretty tough if you're learning it from scratch, because there's just so many technologies. But back then, yeah, I don't know. I just like I have the problem, that problem that I kind of, I can't really sit down and just learn anything. Like I've always admired people who could just do that, but I can't. So I always need like a project or something to do. And as a teenager, that was kind of easy because I had a lot of time. So I'm like, cool, I just want to make something and then I just did it until I figured something out.

Sanyam Bhutani  5:00  
We'll just talk about all of the amazing project that you're working on right now. But I want to ask you, how did you get interested in NLP? Where did that come into the picture? You were already a good coder, you already work in very fascinating things. How did that come into the picture?

Ines Montani  5:14  
Um, yeah, kind of it also kind of just happened. So, basically, so yeah, I was mostly working actually in like a front end in web development. And I met I happen to meet Matt, Matthew Honnibal, my co founder, randomly, and we started talking about what we're working on. And I also I did linguistics as part of my degree in uni, so I was kind of familiar with the concepts and actually that like, that sort of made me realise like, oh, okay, there's actually a way I can combine all of these things. Like I can combine language, I can combine programming, I can maybe even combine, I don't know some of the, I don't know, making things usable, making things from that sort of drive. So yeah, that's kind of how it started. So the first thing Matt was already working on spacey open source library. And he wanted to build this visualizer. And he was he had to explain the concept to me and yeah, I remember first thing I said to him was, it sounds kind of boring. I don't know. Like we're not with you. I have other stuff to do other projects. But yeah, I did end up working on it. And it's like probably one of our most popular demos and visualises today, so to kind of how it started.

Sanyam Bhutani  6:25  
So for the audience that is living under a rock or whatever, what is spacey if you were to describe it to the complete unaware ignorance.

Ines Montani  6:35  
Okay, so, spacey is an open source library for natural language processing, or NLP and Python. And the underlying ideas. There is tonnes of text text is everywhere we communicate in text we probably produce like tonnes of text and at some point, you want to analyse this text and you want to analyse amounts of text that are more than a person could just wait and at some point you you get what you want. analyse text beyond just looking for keywords, you maybe want to know, what, what's the verb and what's a noun who who does what, which persons. I mentioned, which companies I mentioned, how does it all fit together? What's the text about? And that's it turns out that that's something actually, machines can do quite well these days. It's something you can predict statistically. Because you know, language does sometimes follow some patterns. And spacey is a library that can basically help you with that. And built it's, it's for developers. So if you want to build an application that wants to analyse text, you can use spacey to make that easier.

Sanyam Bhutani  7:38  
I love a quote from your I think one of the talks, developers gonna develop and you're enabling them.

Ines Montani  7:44  
Oh, yeah, I think that was actually in India I did that in India. Yes.

Sanyam Bhutani  7:48  
Unfortunately, I couldn't make it to that event. I really wanted to.

Ines Montani  7:53  
I mean, it was a great conference, and I met I met lots of interesting people from the community. So that was really cool.

Sanyam Bhutani  7:58  
Please come back soon.

Ines Montani  8:00  
I'd love to I feel like I still haven't seen very much of what I would never say, oh, I've seen a lot of India because I've been to one city for like a very short period of time. I haven't even seen much about Chennai. But yeah, I'd love to come back. Yeah. Anyways, developers gonna develop.

Sanyam Bhutani  8:13  
Yeah, no going back in time, when you started about developing species, what were your if I may competitors, like what was the scenario like, because back in the day, there was not so much talk even about computer vision, if I remember correctly, vide go with creating a library.

Ines Montani  8:29  
So I think the main motivation came from Matt, when he was working at academia. So he was working at a postdoc, as a postdoc, he was doing research in the field. He'd been doing research for quite a while. And it came to a point where, well, he was in a position his career where he had to write grant proposals and do this sort of, you know, boring academic. Yeah. And also, more and more companies were interested in actually using his code and using his research models, and he was like, well, it's research code. You shouldn't using research code in production and to actually do things, but it showed that there was really this need, that the technology was slowly becoming more and more usable and practical. And you could actually do stuff with it. But a lot of the work and a lot of the libraries and a lot of the code is obviously focused more on research and teaching. And so that's kind of what motivated spacey to really build a library from scratch that was actually intended to be used in production and fast efficient with a concise API and so on. And that was, that was sort of the framework, the fundamentals and inspiration.

Sanyam Bhutani  9:34  
How's the journey been? Since started, even the field has evolved so much. Now to answer was just a thing every second day is day on the birds feet. What are your thoughts on the evolution? And how do you see the industry changing now that we have these billion parameter models coming out?

Ines Montani  9:52  
So I think it's definitely exciting. Like it was a very exciting time because it's finally you know, at a point where cool technology becomes really useful, it's not just like slightly interesting or a bit useful, like it's actually, you can actually do like pretty impressive stuff with it. So that's sort of transfer learning was definitely a big part of that. And I do think it solves a lot of the problems that people were having. Yeah, on the one hand, sure, you always have, you know, you have to research where it's about, like, oh, let's train another model. Let's meet another leaderboard. And you know, a lot of the a lot of the algorithmic research is very relevant. And that's also what's driving production forward. But I think there's also I don't, I don't think the future will be in training, like even more billion parameter models. And I also think that the reality we see and people actually trying to solve real life problems is that often, these problems aren't even necessarily things you can predict end to end people want to do very, very specific stuff. People want to analyse very specific things to their use case. And that's not something you can just throw a huge model and a tonnes and tonnes of GPUs and GPUs that it's not good. It means a lot more moving pieces. You actually need to know what you're doing. You need to know which building blocks you have available. How to put them together. And so that's also something you know, we're very interested in, that's something we're working on, to make it easy to kind of combine all the different approaches to NLP and make them usable, maybe sometimes you want to use this huge bird model to initialise. You know, whatever you're training, in some other case, you may just want to use a bunch of regular expressions and, you know, maybe some smart like, conditional statements to get the job done. And those are all like valid techniques. And I do think that's also what what kind of matters in like a real world application. 

Sanyam Bhutani  11:37  
You're an enabler of developers and otherwise, but uh, you mentioned the traditional algorithms and the most modern ones in the same sentence, which which ones do you think are more production ready? You've been taught, you must have spoken to a few users. Do you see any directions for the field? Any trends?

Ines Montani  11:54  
I mean, obviously, I think if you look at if you're interested in what's more production ready or what right works better, of course. Things that have been around for much longer are usually, you know, more explored and more reliable and often they are things where, look, if you just want to do something very basic, like, you know, finding some keywords or, you know, expressing a basic logical relationship, like, yes, you can throw like this huge model set it but like, they are easier ways. And just because something is deep learning doesn't mean you have to use it. Like, it's, something's kind of sad. I think I hear from people who, like want to do something very basic, like I think there was a user who knew they needed to extract digits from their text. And I was like, all digits, like, you know, just numbers like that, you know, can can you just write like a reggae? Like, well, my manager wants us to use deep learning. Like, that's, that kind of sucks because any model you train will likely be less accurate than a regular expression that you write. But I mean, it the other use cases were like, well, before it was, you know, it was absolutely not possible. to like, you know, analyse text, or like process text, or generate text with that level of accuracy, or even, you know, train these models, because we always, you know, you always have to train them from scratch, it was difficult to share knowledge across tasks. And that is now something we can do by pre training those models. So, and I don't know, we'll see, but I think it's very promising. And I do think it's definitely kind of, you know, it's already, I think, a pretty standard workflow in people's NLP toolboxes to say, okay, I'm starting with a model, I pick something to initialise it with, whether it's like basic word vectors, or like a language model, something like something even fancier. And then I train and fine tune it for my specific purpose. I would say that's like production ready in some sense, yes.

Sanyam Bhutani  13:48  
I want to pick another quote from I'm not sure if it's the same talk, but unlock developer experience and unlock creativity. And that this PC API design is really fascinating. You enhanced it, do you remember any other API's that inspired you? or How did you make the API design choices for spacey?

Ines Montani  14:07  
Um, I don't even know if there was some I'm not even I can't speak on like the exact motivations because a lot of this was like stuff, Matt developer, like initially, like some of the some of the core data structures, but I do think he came very, very early on that we had, we saw the problem that you have, if you kind of if you abstract too much away from the user in a developer tool, like the different approaches and lots of you know, you could have layered API's were like, okay, you have one function that does everything and then you have like, the smaller building blocks. But we always we did see that, okay, there is, um, there are a lot of things that like, make your life harder going forward, if you you know, if you make things too abstract, and if you kind of, if you steal the entire control flow from the user and it's faded, it's also difficult to walk back on that like, you know, we can see that Some examples like maybe even, you know, early TensorFlow did a lot more of that. And now, you know, TensorFlow, two, you know, has like the, you know, late, that's the layer API idea. That really, you know, gives developers much more control, but like, they are some designs that are much more limiting. And we did see that, you know, we tried out some things, we maybe bought some API's that weren't that great, and that we kind of adjusted. But I think that was always kind of a core motivation or idea.

Sanyam Bhutani  15:27  
Was it always goal driven for you the three goals that are already laid down on the spacey website, you want it to be production ready, and to most Indian goals that you've always aim for? Has that been the case?

Ines Montani  15:38  
So you mean, kind of as like a business? Focus off thing? So sorry, maybe I didn't I misheard the question.

Sanyam Bhutani  15:46  
I'm just, again, going on another tangent. Did you always have a goal for the spacey API that you wanted to accomplish? And that led you to making the design choices?

Ines Montani  15:56  
Yeah, I think so. It's basically definitely the focus was always yes, production ready like industrial strength? So basically something you can actually use and rely on. That was one idea, then, you know, okay giving, you know, developers kind of the building blocks they need while still making it. reasonably flexible. And we've always had the plan to build a business around the library. So that's also why, you know, we said, look, this is something you should use in production. And we also need to make sure that it's actually something you can rely on. And that was, because we're open source that's not you know, people have different motivations, why they open source their code, and for us, it was always look, we want to, there's, there's a lot of potential in there. companies want to use these technologies, we want to make this easier. We want to do a lot of open source, but we also want to build a business around this. And if you want to do that, you know, you also need to build good software and convince people that like, well, you do good stuff or they can rely on the stuff that you build.

Sanyam Bhutani  16:57  
Okay, talking about business. You also co founded The company with Matt: Explosion. How did you pick your co founder? What led to that decision? Why did you take that leap into the startup world?

Ines Montani  17:09  
I mean, it was, again, this was kind of random like actually people often don't believe this but I did. Matt and I met socially completely outside of any work related or development related like context, which is kind of weird to think about, like we didn't even meet me randomly on the internet it was like in real life while he was visiting Berlin and considering moving here to start a company and I was self employed at the time and I was also open to potentially do something else so it really it really just happened but it also part of what motivated it was to see that okay, there are lots of people using spacey and a lot of people have that there are lots of interesting problems and also there may be a lot of wouldn't call it low hanging fruit but more like that a lot of problems that are out there that can be solved that maybe so far nobody has solved yet because they're not like the you know trillion dollar unicorn kind of work life changing idea, but they're just like, you know, interesting problems to work on, that many companies are interested in. And so we're like, well, there's a lot there that can be built. So let's try this.

Sanyam Bhutani  18:14  
How do you decide to draw the line for open tools and licencing and creating a business? You always I think you made an explicit decision never to create a business around specie.

Ines Montani  18:24  
Like oh, directly exactly. I'd like to monetize spacey. Yeah. So they technically are businesses, you know, definitely created around spacey in some ways, because that's how people know us. But we always said it is a problem if you know we kind of mixing the mixing the open source and commercial side of things can easily become very problematic if you rely on one or the other. For the project to succeed. So we always said well, we basically will be free. The code will be free and open source. And sure data is not always free models aren't always free, depending on what you do. But spacey itself will be free. And we also not even, we also realised very early on that it can be problematic if you want to build a consulting business or if you want to want to sell helping people with your software, even if it's open source like some, in some ways it can work. But if it's really about, like, oh, that's our enterprise strategy, that can be really difficult. Because if you've always wanted to have good docs documentation is like a huge part of, you know, what we're doing and what I think makes a good developer tool. And so if you're, if your docs are too good, and people, you know, use your software and don't have any problems, and then they don't need you, and they don't need to pay your money, but if your dogs are too bad, people don't even adopt your software and don't want to use it. So I think it creates this really weird, like incentive is very difficult to get out of. And so that's why we're like, okay, spacey is open source. It's also not, algorithms move fast. Research moves fast. It's not all you know, you're locking up your code isn't always the best thing to do. The other things you can offer commercially like products, for instance, or data. Yeah.

Sanyam Bhutani  20:11  
How did the idea for prodigy come about then? Because it's a completely different project. Were there any inspirations after you worked on spacey? Or was that again another interesting idea?

Ines Montani  20:22  
No, I think I think it was direct it was kind of therapy inspired by spacey and also some of the early consulting with it. So when we decided to found a company, we decided not to take venture funding and to bootstrap the company. And so you know, initially we call it like we raised the client round so we basically worked for you know, we I think we spent six months doing consulting projects for others a to make some money and be to find out what people were doing and what the problems were because I think, you know, you don't want to be close to people who are actually using NLP so and one thing we immediately saw that always came up was the data is like people want to train custom models, but they usually don't think about like how they're creating their data sets. Either they will just like download something on the internet, or they will just like throw their stuff on Mechanical Turk with like, really vague instructions, get the data back. And then it's like, oh, my model is not learning. It's like, well, yeah, it's like the core of your application is like what you train it on. And people didn't think so much about it. And it also a, we were like, well, okay, what do you want to do on like, labelling that's important. We want to create our own data sets. And also, there's clearly a niche there, like people, people should be data scientists should be working much more closely with our data. It's one of these things are like, it's kind of one of these things like that everyone knows is true. Like, I oh, you should eat more vegetables, or you should like floss or you should do whatever, but like, you kind of don't get around to doing and we're like, well, that's that's kind of a shame because it's important. And, yeah, so like, well, what what would a tool look like? that we would want to use to create training data, to label data to create consistent data to run training experiments. That's kind of how prodigy was born. And I think the main things we came up with one of the main things we wanted and it turned out that like a lot of other people liked as well was, well, we weren't. And they intuitive interface in a way they, you know, they've quick feedback loop and as little friction as possible as little places as possible where like, you know, humans can make mistakes that then lead to like really bad data quality. So you know, you want to automate things, you want to script things it needs to be, you know, we want it to be able to write like Python, a Python script to load data to put things together to decide what to even show them annotate to have a model in a loop maybe to be even more efficient and only annotate the things that like, you know, are really necessary, and so on. And that's, that's basically, that's the essence of prodigy. And that's, oh, yeah, and of course, it needs to be like a tool you can just PIP instal and run like it's not a service you people have have their own internal data. The most interesting data is the proprietary data that the company has you don't you don't want to upload that to some random startup server? And in my opinion, nobody should you need to stay on your machine. You want to download something. Pip install it use it scripted. And yeah, that was the idea. And we've been very lucky that, you know, a lot of other people liked the idea as well. And it's what we focused on, ever since we stopped doing consulting, and it's what's been funding the company. And we've now been able to grow our team and work on some more exciting stuff.

Sanyam Bhutani  23:34  
I think this might lead into another interesting tangent, but there is also a very nice interface to it. And I don't know how you do it, but everything you put on the internet has a very beautiful interface, even your slides are amazing.

Ines Montani  23:46  
It's also kind of a hobby hobby of mine. But yes, the slides especially but no, I think I think it's important, I think how something looks that's like kind of the experience you have and you can you know, you can use that to shape the experience people Have for the tool and also to actually use it to make people more efficient, whether it's like, you know, having nice and useful, usable docks or whether it's like, okay, having a UI that like gets the job done and helps you focus. So I think it's an important component of what we're doing.

Sanyam Bhutani  24:17  
Lingering on to this, even the websites around, will talk about think but think spacey, your personal website, your slides, amazing, you're amazing speaker, but how much time do you invest into creating all of the visual appealing elements out of all the amazing work that you're already doing?

Ines Montani  24:33  
I mean, it's, it's weird, because I do feel like if I have a good idea, it's very fast. Like I always that's why I find a way to talk about it. Because it's like, oh, just sometimes, okay, I spent like, you know, I spent a day or two and I have something that like, looks good and that I like, and of course it doesn't mean it's like you know, super easy or like no big deal but like it does I it is something I like doing and it's something if I have a good idea actually. It actually doesn't take me that long. I just the idea is hard like I couldn't. I'm not you know, I'm not a designer. I'm not like I'm not even like a professional creative. I felt like I couldn't. I'm not sure I could work in a job where I really had to be like, creative. Like, yeah, I don't know what like, you get, you get you know, you get a task, you have to come up with something and it has to be perfect. I don't think I could do that. But if I have a good idea, I'm usually quite quick. I'd like something.

Sanyam Bhutani  25:24  
Talking about prodigy who all would need it? Not everyone is labelling data, even like you said, it's a veggie that we don't eat essentially. But who's it for essentially, what's your target audiences?

Ines Montani  25:37  
developer developers? I mean, it's like so data scientists and machine learning developers are like, you know, the most obvious target group. And if you know, it doesn't mean that they have to do all the annotations themselves, but like it, what we do recommend is like, look, you're starting out. You don't want training a model or you you tasked with like developing a model or system and you have the data and often later help even just you know, doing a few experiments yourself. And to end helps you a lot to like, understand what the problems are even, you know, even basic questions around like, consistency and like all label you want to label person name should something like Doctor be included in the person name or not. That's like sounds really basic. But even stuff like that is something you only maybe only think of when you see the examples in front of you. And then if you're developing the system, you'll also know that if your data isn't consistent, you get much worse results. And then so before basically the idea is you have to try things out often you'd have some idea doesn't work, try something else doesn't work, try something else. Maybe the 10th idea works. And that sort of iterative process works much better if you can, you know, if you have tooling that lets you skip these workflows. And so, basically, we have you have users all across at all kinds of industries. Mostly it is people working in the field of machine learning. Who used prodigy to develop their prototypes? And then, you know, open it up, serve it somewhere. So, you know, the annotators can do the actual annotation at a larger scale. But it's really cool to see more people who have a background in other fields, like, you know, you have social sciences, legal fields, biomedical domains, who are like, Well, look, I can learn some programming, it's not that it's not rocket science. And I just, you know, I've just taught myself a bit of machine learning. And now I want to, you know, see if I can improve my work by using some NLP, or computer vision or whatever. And then they also end up using prodigy.

Sanyam Bhutani  27:45  
I guess data science, anyone can actually jump into data science, believe it or not, but it speaks to that.

Ines Montani  27:53  
Yeah, and I think it's also it's, you know, not say, oh, everything needs to be super easy, professional tools can be quite complicated if you people are like, oh, machine learning is so complicated, but it's like look at what people in a lot of other fields are doing. And like Excel spreadsheets or if you look at like really specific software that like medical professionals use, it's not like it's easy, and people just want to press one button and get like something magical out. People are very used to learning complex technologies, if it means they get the job done. But I do think in the future, we'll see more and more people using something like NLP as a tool in their overall toolbox. Just like people started using other, you know, technical, advanced, says, in our work, and it's not, it's actually it's not, it's not really about having NLP experts or machine learning experts who are only an expert in that. It's like you want to be an expert in what you're trying to solve there in the real world. And then add machine learning on that on top of that.

Sanyam Bhutani  28:54  
That's a great point. Now, you mentioned toolbox talking about another tool that you just put out. Again, please please keep them coming. But think.ai, that's that's some insight for the audience. That's again unaware. Can you tell us what is it? And why did you create it? Why did you feel the need to create this?

Ines Montani  29:11  
Yeah, so think, think has always been the Machine Learning Library powering spacey. So basically, you know, when we started out writing spacey, it was pretty early Pytorch hadn't been even been released yet. So pi torch didn't exist. TensorFlow was like really, really early. So basically, we ended up writing our own implementations. So we ended up writing our own Machine Learning Library to do all the stuff we wanted to do. Like maybe if Pytorch had been around, maybe we would have adopted Pytorch. There are lots of other tools now. But back then we're like, well, we want to be able to be in control of everything we're doing. And, you know, we want to be able to make it fast. We want to, you know, also we don't want to depend on other packages, like for example, you know, maybe early on it would have probably been very difficult to depend on TensorFlow, which is you know, changed a lot. It wasn't even, you know, it was kind of almost an alpha. It makes sense. So we're like, we don't want any more dependencies, we're doing our thing. And that's kind of that's how thing was born. So technically think is on version eight now, and it's been around for years. But we also always said, well, we, we, you know, it was it's open source. If people wanted to look at it, people can use it. But like, we didn't explicitly encourage people to use it because it was a bit messy, and it wasn't like kind of ready yet. But now, basically, kind of at some point last year, we were like, well, okay, one big thing. wanted to ask people want to use custom models is basically so that's an back in the days use it a few years ago, there was a bit different people wanted implementations, they can just plug in people, nobody wanted to adjust a named entity recognizer, or, you know, training, you know, even training custom components was much less common now people, but there are a lot of people who know how to use machine learning libraries. People have very specific ideas of the model implementations they want to write and they want to use spacey, and that was what motivated kind of rewriting thing from scratch to make that sort of thing easier. And to kind of give. And in order to do that if we want to be able to support TensorFlow, Pytorch, all kinds of other libraries, whatever exists, we need to have one unified interface for all of them. And we've also, you know, think, has always had a more functional programming approach to writing your networks, which kind of also made it a lot easier to think about what's going on what's passing through the network. So you know, instead of a computational graph, each, you know, the forward pass returns a callback that lets you compute the backward pass. So that sort of for us made it easier to write these things. And it's also a model that we think works pretty well. Nowadays, to think about neural networks. And so yeah, then we we started writing thing is, and a nice thing that happened was we finally got to drop Python two and I think 3.5 as well. So that was it was kind of it was the first project, we were able to write from scratch without having to think about backwards compatibility. So we were able to go all in on like typing, we started off by just out exploring type ins, eventually, we ended up implementing some of our own types. So we could, we can really offer static type checking for neural networks for the models for the layers and also for the arrays passing through the network. So that was another exciting part of it. And yeah, initially it was, it was motivated by the needs we had for spacey. But we also thinking that he could actually be pretty useful for other people as well. So that's why we ended up open sourcing it and documenting it. Yeah.

Sanyam Bhutani  32:46  
Talking specifically again, about when technical feature taking was slightly new to Python itself. Why was it important to make an special feature and I know you focused on a lot on it in the framework.

Ines Montani  32:59  
Yeah, so I've been and one big problem is that just neural network code is like really abstract. Like, it's even, you know, even if you know, if you know, NumPy really well, if you know, arrays well, and you know, you can understand it all, but I think everyone agrees that it's an abstract thing that's going on there, you have these multi dimensional arrays that are passing through and then like back out, and in on the way in and now they're reshaped, they change. And at the end of and, you know, if you have one bug somewhere in one layer, the bound it can take it can be very, very frustrating to find that. So, you know, before we constantly have stuff like, you know, we'd have all these coordinate broadcasts shape, whatever into shape, whatever, and you're like are shipped somewhere. I have a mismatch. Now let's find out where it is. So that was that was this frustration that we thought okay, they kind of had, oh, that's sort of what's that type type checking was made for to make things easy. Oh, you're chaining to level two layers together and one of them outputs something And the other one expects something else that should not, you know, and you can carry that for for a long time and have these annoying bugs. So yeah, we thought actually, you know, it's, it could be yeah, it can be great if imagine, you know, you're writing your code and you're writing pretty complex layers and you know, your backward pass, that's like reshaping your writing. And suddenly, you know, you get this underlying one line is underlined, and it says, like, oh, this is, this is a mismatch. This function should return a two dimensional array, but you have a three dimensional array here, and you're like, I actually made a mistake here. So it was and it's still not like, it's not 100% perfect, like, it's kind of it did require, basically kind of sketching out a lot of the NumPy NumPy array methods. And, you know, array attributes, and have custom other custom methods that are all typed. So you know, you can actually infer what stood what's expected if you call some on an array of that shape. And so on, but like we kind of we did some of the groundwork for it. And it was very, very promising. So, yeah, I think I think as the ecosystem is very, very young still, and there's a lot of work done on mypy on the type checking, but I do think going forward, I think this might play a big role. And ultimately, it means the goal is to make developers more efficient, like, you know, if you have fewer bugs, or if you have, if you write a bug and you immediately see it as you write it, that's good and much better for everyone because it made them more efficient and you can focus on like doing other stuff, instead of chasing down that one blog later.

Sanyam Bhutani  35:38  
Looking back at your amazing open source journey, where you always drawn to keeping things open to is creating something for the community, or do you have any proud moments from this amazing work that you've been doing?

Ines Montani  35:52  
I mean, it's, it's interesting, like I've always agreed with the idea of open source and you know, the kind of good you know, giving things to the people and empowering people through like, you know, software and stuff. But I have to say I did. I did. It did take me a while to get used to this contract very early on when we started, you really understand this concept of why would you make your entire product open and free under a licence as permissive as MIT which basically says, well, take it my as long as you mentioned my name, you can do whatever with it, and like, you can sell it. Like it's a weird, it's a weird thing. And I'm still like, I still spend a lot of time having to explain that to people or why this is even part of our business model and why you would do that, like in other industries, people are like, why is this way like, why do you put everything out there? Like people can just take it? But yeah, it is how it's, it's how it's done. I think it's how software a lot of software works. It's a good thing. It can be very beneficial. And yeah, I do think every, especially also in research, there's a motivation to keep things open. Nobody has like an advantage from like going dark and stopping to like publish their things and for and from a more business perspective, like it is a good way. Like, it's a good way to get people to start using your software. And it's for us, it was a good way to say, well, look, here's the stuff we're doing. You can use it if you like it, we do other things that maybe are not free. But otherwise, nowadays, it would be very, very difficult to convince someone that they should give you money for like your amazing software if there's nothing you have to show for it. So I do think it's beneficial, but I also do think people should approach it in a realistic way. And actually do think about okay, what are the implications of open sourcing something? What am I doing, what am I contributing to? Or what does it mean for me as an open source maintainer? What am I signing up for? Am I communicating my intentions clearly, what's my goal even because I think a lot of people want to get into open source for like the opportunities that are there, which is great. But we also want to make sure it's people are not just doing finding out and ending up like I don't know. Yeah. Kind of torturing themselves so that some companies can like use stuff for free, which is awesome.

Sanyam Bhutani  38:12  
Talking about, again, your company also, you've had an amazing philosophy of also keeping the team very small. Why did you skip stick to that? And you still sticking to that, believe it or not for the audience, the speaking is right now I think six people.

Ines Montani  38:26  
Yeah, I think so. If you yeah, if you if you count. So we have. So yeah, it's me. And Matt, obviously still. Then we have Justin who's been working with us for quite a while. And he's also working on prodigy and the upcoming product teams, which is more of a software as a service product. Then we actually have two core team members who also have become core contributors and maintainer of spacey, so Sophie and Adrian. Then we have Sebastian, who actually who's who some Python users, who actually many people would know from fast API which is the kind of new modern REST API framework in Python. And so he's joined our team is working on prodigy teams, among other things, and then we also have Walter who's helps out with organising our events and kind of all kinds of operations and stuff that needs to be organised and taken care of. And we've also worked with research students in the past have been helping on various things.

Sanyam Bhutani  39:25  
Awesome. How do you balance all of these roles? even earlier, you you were just two people and yet you were also the director while also creating the library. Did you how do you balance do have child in code and back to business and I'll do manage all these things?

Ines Montani  39:41  
Um, I don't know. I mean, like, I, I guess, I guess there's a lot of there's a lot of multitasking involved. Of course, you have to do like different things, but it also keeps things exciting. And I do think very early on, we optimised for like, cutting out a lot of the other bullshit, you know, have to do when you either a large company or like doing, I don't know, the more mid a typical startup path, there's a lot of time you spend on other things that are just part of part of that. And that's fine. But like, we were like, well, okay, we really want to focus on we want to develop that's like our edge. And also, you know, coming up with the with products. Yeah, envisioning bike, you know, beautiful building developer tools, you know, bit requires you to be very, very close to the developers and that's something we like, that's also something I think we're good at. So we did optimise for doing that. But I think having a small team also helps because it means everyone gets to actually focus on doing their doing their work. And otherwise, you know, if you had like 10 times more people we'd also need like, you know, for what's the goal for every like five, six people, you need one person managing. Oh, I don't I mean, I'm sure in reality, it's like it's moving. But like, the ideal scenario, so it's just like by keeping things small and having like, you know, a good team with like good complementary skills that just like, you know, build on top of each other I think, yeah, we we were able to achieve something like that. Yeah.

Sanyam Bhutani  41:16  
Awesome. Now, this this is again another tangent that I feel I'm guilty of. I haven't had many women in Data Science on the show. Unfortunately, I was talking to Parul, a great colleague of mine and I think one sixth of my great guests have been women, being what what do you suggest how do we create a better environment? How do we think about this? I know for a fact that even I haven't been very thoughtful of this.

Ines Montani  41:41  
Yeah, I mean, I don't know I'm not like I wouldn't say okay just because I'm a woman doesn't mean I'm you know, I'm an authority on like, you know, all things women in tech, and also I've been in a position where I was very lucky that I was able to bypass a lot of challenges that like other people in the field might a lot of women In the field, my face, for instance, like I never, I never actually had to work myself up in a corporate environment, which is what still like, you know, they problematical I was able to always work in a way and on projects that were very visible, because that's in some ways I do think, you know, the visibility does have an impact on me on it sort of promoting the work and also showing, showing you you know, other people in the field that like, okay, look, you know, the other people like you or the other people, you can, you know, take some inspiration from whatever. Like, I still sometimes find this a bit weird, but it does make you know, I do it. I do sometimes have mixed feelings where like, yeah, people come up to me or, you know, young women who just started working in a field come up to me and were like, oh, wow, I saw your talk and it was so cool to see, you know, someone else doing things and being visible. So I you know, I appreciate that as this is something I can I could be doing, even though it's always it will always be a strange feeling to me to have someone tell tell me that, like, I'm inspiring them because I'm like, I don't know, I just like, I know went on stage and did a talk or like this interview, I just published some code. But yeah, I mean, I don't know, it's a it's a like, the deeper the deeper problem is like a deep. There'll be a big like tangent. We have if we were going to talk about all the things that are wrong in the industry, that make things you know, unnecessarily hot for women and other like minoritized groups, but I do think for example, yes, like visibility is golden also, you know, conferences, you know, hiring diverse speakers and diverse lineups. And you know, just yeah, making this more of a thing and actually, yeah, it's funny, because actually, yes, bases spacey is actually a majority female, run and maintained open source project. So we like, you know, free women and men. You know, it's also people are like, oh, but why does this matter? It's about like the skills and it's like, well, yeah, it shouldn't matter. But it is, in fact, quite rare. I mean, look around like, it's, it's not, you know, it shouldn't be like, oh, we'd be a big deal or make something special, but it's like it is. It's not that common. But anyways, I'm happy to, you know, have it work in a team like that. And, you know, well, my open source project is way.

Sanyam Bhutani  44:32  
And like you said, even though we nerds are slightly socially awkward, but if you go on Twitter, the community is very open Twitter or otherwise, on the internet. If you put out wonderful projects, everyone will definitely go ahead and appreciate you no matter where you come from, actually, given how connected the community is now.

Ines Montani  44:50  
That's how it that's how it should be. Oh, that's the that's the goal. Like unfortunately, it's not always the reality. But like, yes, that's what I think that's what we should all aspire to. And that's it. Meanwhile, we should all try to create an environment like that and also listen to people. So yeah, I;

Sanyam Bhutani  45:08  
So now for people who are aspiring to start their open source journey or machine learning journey, if you had one best advice for them, what would that be?

Ines Montani  45:17  
Oh, I always it's a good question. Also, I usually when I get like asked about advice, I usually try to prefix it by like, saying that I don't usually like to give advice because people's situations are so different and most advice is bad advice, but if I would like the one thing that's important in open source in general is to just ask yourself, what your motivations are, like, what do you want to achieve by you know, contributing to open source or even by starting your own project or, you know, wanting to you know, maintain and work on a popular open source project, and I don't know people's motivations can be different for some people. It's like, hey, I want to get live my work out then have a, some kind of portfolio and like, get a bit job for instance, or improve my opportunities. And I think if you approach this strategically, I think that's, that that can be great. But you have to obviously, you know, you have to be aware that that's what you're trying to do. And that's what you're optimising for. Or maybe you're like, hey, I want to be visible, and get a project, show people what I can do, and then build a business around that doing something that people might also like, that's also a valid or hey, I want to I want to learn more about a certain subject. That's great. But I think it's important to like, really ask yourself that and think about, okay, what this means and what you should prioritise and how you should go about it. Because otherwise, you know, you might be you don't want to be wasting your time or ending up in a very unpleasant experience that you don't actually gain very much from, like maintaining some project that a lot of people relying on. That's not very fun. That makes it very difficult to monetize or start any business around. That makes it hard for people to hire you. So you're just like working away for someone else for free, that sucks and nobody should be doing that. And I think by being more strategic around why you're doing open source and what you're doing, I think you know, we can make the experience better for everyone and actually make sure that people benefit from it in a way they shouldn't get like a you know, get a return on like the work they put in. 

Sanyam Bhutani  47:23  
Awesome. Now my final question is, I think a challenging one for you. What is your favourite tattoo if you had to pick and the summary behind it?

Ines Montani  47:34  
Okay, I do have to pick one. So it should be one that I can actually show right. So we actually I have a few so like one the one that actually you can see very easily here is that it's supposed to be W is very small but it's actually has an interesting story. So this was done as part of the human rights tattoo, maybe you can add like the link to it and like, you know, the video is basically it this is a really cool project they're travelling around the world and they're doing one letter off the Declaration of Human Rights on to one person each. And I don't know how far they got by now but I think they're still doing it because it's it's a pretty it's pretty, it was a lot of text and a lot of people so I don't also don't need to look it up which exact w off like the Declaration of Human Rights I have here. I think I thought it was a cool project and I think they still travelling the world. So if you're into, someone who's watching this is into tattoos and yeah, I think it's a cool project to support. So that's that's one I think that's actually I mean, I have quite a few I have I have some that I can't easily show I got like an intimate attitude to like, celebrate, like my love for the internet and growing up on the internet. Like my god, like I have a tattoo for my pet rats who have unfortunately died now but you know, I got I got one for them. I got I got a sloth because I really like sloths.

Sanyam Bhutani  49:04  
Awesome. 

Ines Montani  49:04  
I got this is the I got I got some that I have with friends this is like you can't you can't really read this, but it's a lyrics from like a popular German singer who was way especially popular in I think, in the 80s I don't know if you know, the 99 red balloons the song, it was big. 

Sanyam Bhutani  49:21  
I am familiar with it.

Ines Montani  49:23  
It was big in most countries, but um, she yeah, she's German. And this is it is a lyric from one of her songs. I got this with my best friends. And yeah, she's actually you know, he knows her a bit and she's she's actually seen this. So that's that's kind of a funny story about like, but yeah, anyway, so this this there's a lot but i think i think the human rights issue is kind of the coolest story behind it. 

Sanyam Bhutani  49:49  
I am glad I found a challenging question.

Ines Montani  49:51  
As a disclaimer, of course it does introduce do not have to mean anything like i'm i'm not saying if you get a tattoo it has to have a story. You can just have like tattoos that don't mean anything. And that's totally fine too, I know so, you know, not every stranger needs to know what all of your tattoos mean.

Sanyam Bhutani  50:09  
I'm glad I found a challenging question for you, before we end the call, if you want to mention any platforms where you can follow your amazing work, I'll definitely have them linked in the description. But if you do mention them for the audience who's too lazy to scroll even.

Ines Montani  50:28  
So I think I think the easiest one is my twitter if you want me to, I think it should be shown in the video as well in the corner. And yeah, that's why I'm mostly posting about work. My thoughts are like NLP and other stuff I'm doing on it's also the easiest, easiest one to connect. I don't I never checked my LinkedIn messages. So don't message me there because you're not going to get a reply. Because it's full of like recruiters spam and other stuff. So I just stopped looking back. Yeah, Twitter. Twitter's my main, the main platform that I use And of course, you know, you can check out all open source projects on GitHub. And get involved there, check out the websites, the docs, there's like a lot there if you're interested.

Sanyam Bhutani  51:09  
Again, as a reminder, audience, please don't be lazy. Scroll to the show notes if you want to find these links. It is thank you so much for all of your contributions to the community. And thank you for creating all of these frameworks for this.

Ines Montani  51:21  
Thank you.

Sanyam Bhutani  51:28  
Thank you so much for listening to this episode. If you enjoyed the show, please be sure to give it a review, or feel free to shoot me a message you can find all of the social media links in the description. If you like the show, please subscribe and tune in each week to "Chai Time Data Science".

