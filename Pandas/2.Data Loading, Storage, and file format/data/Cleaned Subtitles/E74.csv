Time,Speaker,Text
0:13,Sanyam Bhutani,"Hey, this is Sanyam Bhutani and you're listening to ""Chai Time Data Science,"" a podcast for data science enthusiasts, where I interview practitioners and researchers and Kagglers about their journey, experience, and talk all things about data science.

Dmitry Larko  0:45  
Hello, and welcome to quarantine content with Chai: The CTDS dot show. In this episode I interview another legend from kaggle: Dmitry larko, Chief Data Scientist at H2O.ai. We talk a lot about Dmitry's journey and how his views on kaggle have evolved over the few years. He's been active on kaggle for the past six or seven years, and we discuss how his journey and his learnings and his takeaways from kaggle and his overview of the platform have evolved. Along with the tasks that he works on during the day outside of Kaggle, he also Kaggles during the day. We discuss his role at H2O.ai, note, we both are biased, we both work at H2O.ai but this podcast is just an independent conversation between the two of us. And we also discuss about H2O.ai's products and the challenges that Dimitry is undertaking at work. I believe this conversation has a lot of advises for kaggle. The biggest one for me is and the biggest one that I'd like to highlight is if you stay persistent, and if you keep learning even from the losses you set out to make a win. And it's an iterative process and you can keep learning on Kaggle. Another one is don't be scared to make the jump on kaggle it's always scary. But once you get involved in the process, not just of kaggle or even in data science broadly speaking, there's a lot of learning to be done with these two wise advices from Dmitry, his the complete conversation, please enjoy the show.

Dmitry Larko  2:34  
Hi, everyone. It's an honour for me to be talking to Dmitry Larko, the legend on from kaggle. Dmitry, thank you so much for joining me on the podcast."
2:44,Dmitry Larko,Thank you. Thank you for having me here. Actually. It's a pleasure.
2:48,Dmitry Larko,Really excited to be talking to you. I want to start by a silly question. If I may. I've met so many Dmitrys and all of them are great on kaggle is that a cheat code? Is that a secret to being great on kaggle
3:00,Dmitry Larko,"Well, I mean, if you want a serious answer on this question, I think the moment of my birthday and, like, around 1980s and 90 it was a quite popular name in Eastern Europe, Dmitrys. So there's a tonnes of so and, you know, there's a lot of Dmitrys basically been born at that moment. And a lot of babies been named Dmitry, basically. And, yeah, that's why, you know, you have a lot of population, and some of them actually being great on Kaggle. Well, right, just by pure chance. I don't think it's actually really good for me, right. Yeah. And but, you know, yeah, I know, it's like a silly question. But, uh, you know, I don't I mean, I think this question actually requires a serious answer, right? Because I don't think participant on kaggle requires you to have a specific, you know, like something that nobody else has, right like something some like a specific skill, basically. No, it's not. It's, it's It's mostly been, it's mostly for constant work, right? So if especially if you're given competition, that means you have to compete from the beginning to the end, as soon as you start competing, you end up competing only after the competition. And it's not like, you know, like, Hey, I made a submission, like two months before we can position and I'm done. No, I mean, obviously, somebody will, will build a better solution for you, if you ever like, you know, I bet the social compared to your solution. So we just have to be, you know, all of us constantly present, and try different ideas over and over again, right. So it's, yeah, it's, it's, I think, if you ask me to describe cago using a single word, this was going to be persistence, right? Just have to be persistent. You know, like, you know, just doing until the end. And I believe actually this can be true for a lot of it's actually can be a part of the formula of human success in any in any type of activity. I just like, you know, just do it until until you until you make a basic error. Right? That's, that's hot. That's that's really hard, but I don't have any other recipe on how to do that, right? Just Just Just do it."
5:13,Dmitry Larko,"Certainly we'll we'll talk more about that. But another thing I wanted to point out is Dmitry name, the name is synonymous to someone who's from Russia, and at least through the movie culture, we known that we know that Russians are great at math and programming. Do you also think that's, that's your, that's a benefit to you on target?"
5:34,Dmitry Larko,"Ah, I never was good at Math, you know, honestly. So it's, well, I, I do have my basically my major actually is an analysis of statistics and machine learning. So obviously, it's helped a lot. But again, it's been a while from, you know, like, I actually had a huge gap between my education and the time. I actually think To apply the knowledge or like Machine Learning on basically in Kaglge or like in real life uncomfortable in real life so"
6:10,Dmitry Larko,that means it's not necessary
6:13,Dmitry Larko,if I was to educate basically you still can learn especially right these days you have tonnes of resources available online so it's a
6:24,Dmitry Larko,"what was the question, I kind of lost my thought."
6:26,Sanyam Bhutani,do
6:29,Dmitry Larko,receive yes
6:31,Dmitry Larko,"yes yeah Russians may be but again I can speak for the whole nation yes we do have a lot of bright people I'm just thinking I'm not part of them actually. You know, just here we do have a strong education and math and physics right but to me Math was actually all this like you know, kind of arcane knowledge basically right. So starts actually I yeah, I feel Math but on a you know, in statistics, compared to like Math in general. But still, you know, I never thought of myself as a, as a really good in math person. It's more like, you know, I know how to use this knowledge I have and the tools I have no practical life scenarios I cannot like in on practice."
7:15,Dmitry Larko,"Got it. So you mentioned you had transitioned a little while after completing your studies, and I researched this a bit through your I think LinkedIn, I found out that you transitioned into a data science role in 2015. And you had won your first medal in kaggle, around 2013 or 2014. Why did you decide to transition into this field?"
7:37,Dmitry Larko,"So it's a it's a, it's a, it's a long story of being very humble, and a long story of being like, you know, it's basically a story of fear, right, because I actually was afraid to switch it. So it started actually, for me, it started in around 2012. So I learned about Kaggle in like November 2012 something about that, right. So I think And the 2012 from my dad actually who is actually good at Kaggle. So actually what he learnt about Kaggle way before me, I think he can pick like a year or two before I actually heard from him. So and I like the idea immediately right so because you have I mean that's it yeah it's it's it's exactly what I what I would like to do right but I was actually afraid to come in to compete immediately. So I spent basically six months, six months after I learned about the algo just trying to learn our because I had no idea about our before that right and refresh my knowledge in statistics and machine learning. And after six months, I finally decided to join still was extremely afraid of you know, join my head was shaking my head while I'm doing my first submission. And but you know what, in the next month, I learnt about machine learning, like 10 times more compared to the previous six months of preparing myself for Kaggle because, you know, Kaggle really motivates you to learn tonnes of stuff in a fraction of seconds, basically. Yeah. So in a very fast pace. And yeah, that's actually interesting insight, you know, so don't hesitate to to compete, just start to compete, especially if you really want to, for me, I mean, I mean, I actually was afraid to start competing on kaggle because it was like, either way. Yeah. But, you know, in your first competition, there is nothing to lose actually. [Yeah] just like, okay, you can compete. I mean, nobody knows you. Right? That's, that's fine. If you lose, you will learn tonnes of stuff. If you win while everybody else will, will, you know, we'll learn about you just visit, visit tonnes of things you can actually achieve right? Without almost nothing to lose. Right. And that actually, that was my motivation to start that first competition. And I and I started it. And to me, actually, my first competition was actually extremely successful. I end up in 10th place in it and then that was a the biggest competition: At the moment and the platform, it was like a 1.6 thousand people or participants actually it was a quiet huge. And I was in 10th place, right? And I never thought of myself as a data scientist or machine learning expert. Actually, before that moment, I was like, Oh my god, I can actually can do that. And I will obviously I got stuck to Kaggle immediately."
10:21,Dmitry Larko,What was the reason of you getting addicted to it? I think addiction was the right word.
10:26,Dmitry Larko,"Yeah, addiction was was exactly the right word. I yes. And no, I still kind of like to believe I was actually you know, just like doing this stuff. Not just like reading. But maybe it was a different a big part of the question to get, you know, immediately stuck to the Kaggle. Because I know like, for example, for Marios who is very well known on Kaggle, as Kazanova basically, he actually lost his competition. That's the that's the very same condition. I was in 10th place. He was like on 100 something. So and but for him, it actually was See, that's something that motivates him to continue actually, right? And, honestly, you know, because kaggle is more like a Marathon, right? You have to spend several months competing competition. It does require a lot of motivation. So it's very important to be in the right psychological state basic, you're right. And for example, for myself, you know, back in the days of trying to put myself back in these shoes, and, you know, answer the question, what would happen if I won't be an authentic person this competition would continue actually competed on kaggle. But that's actually why very tough questions. But my second competition actually wasn't that wasn't that successful compared to the first one I was like, in a certain place, right. So and, yeah, back to back to my story. After my first competition, I reach out to you know, to some of our seniors, people in my company, asking them you know, what guys looks like I can do that. Right? Like, it seems like it I really can do something, maybe it's a good idea for me to transition from a data warehousing role I actually doing that now to the data science role, because it feels like a more interesting job to do, because I was already extremely bored is a data warehouse? You know, there is no actually, for me at that moment. The was in there weren't any any challenges left. So, you know, especially technical challenges, like I know, how to build system, you know, there was Alton's, obviously tonnes of different business creation that you're building a data warehouse system, but it's, that wasn't something that attracted me at the moment. So when I decided to switch the data science role, because you know, I had a feeling that there is a tonnes of data and we know how to store data already, but we have no idea how to extract insights from the data and the, the, the expertise how to, you know, tell the story about what is your data, how to build models is the data going to be more and more important? Especially, you know, like, the more data would have basically so to remind It was a 2012 so Hadoop actually was like all around the place like everybody talks about Hadoop and I had no idea what Hadoop is actually so I actually fought you know deployment to in order to be a data scientist you have to work with big data which is actually not true in most of the cases you don't have to I mean most of the data sets you will face in real life they're quite small especially on the on a modern hardware they really small like you know, you can fit them in the ram basically right yeah. What what big data talking about so but my seniors right they listen carefully to my story like I say, Okay, yeah, competition you know what I mean? It's so basically they tell me, you know, get several competition in the first place and then circle back to them. Okay. All right. It was a kind of, you know, not answer I expect to get but that sounds that I get. So and I spent the next year basically competing on Kaggle Plus during my like, doing my job during the day so like, you know, I was a data warehouse architect during the day and I calculated you know, yeah. It was extremely tough periods of my life because I sleep most of the time I sleep like six to five hours basically. So, yeah, so it's like it's a it's a it was a two job basically working two jobs at the same time, right? I have an eight hours, my standard job and after a gig came home, I spend another six to seven hours just you know, building something on Kaggle and like pipelines, whatever. Basically, yes. And especially because most of the computations was with tabular data computations, you have to spend tonnes of time basically designing new features."
14:52,Dmitry Larko,"After the year, basically I found myself in a 20 assumption position in a national Kaggle leaderboard like internationally, you know, like a main user ranking basically. And plus I was I had cago master badge, there was no grand prize to better performance. Yes, I'm just, you know, just to emphasise master was the toughest one basically. Right. And I reached out to my company to my seniors again, and it was like, You Like who? And you see, I think it's a it's a, what helped me actually that's the Kaggle became more and more recognisable platform actually, people heard about the cargo and as soon as I mentioned, you know, I'm like, I'm 20 something out of 100,000 data scientists computer on kaggle is like, oh my god. Yeah, you just like yeah, sure, sure. Yeah. Like, yeah, we just like, immediately promoted the data science position. I was like, Huh, okay. Because, you know, I never was actually sure I'm, at that moment of time. I wasn't, I was never, I wasn't sure I am actually worth something as a data scientist. I was I'm still a quite humble person, actually. At least I tend to think of myself as a Been a humble person, but most of the time actually it is true. So I do need some, you know, some more self self self awareness basically as being an expert because you know, because I don't see myself as an expert I see a lot of areas I have no idea what to do about and I got a lot of areas I can learn more about. So that's how my data science career started. Basically, I was actually I was still was able to continue on kaggle and at the same time, I basically audit different data science project and my company share my expertise, you know, train data scientist, things like that, basically. And after that, I decided to at some moment of time, I think it was like a four years ago, I decided to change the company basically. And I met Sri I met other people at h2o.AI and yes, these guys actually respect basically, They-H2O respect kaggle actually and respected achievements on kaggle. And I was actually the first Grandmaster to be hired by H2O.ai and Sri actually immediately said like, You know what? I mean, I know you're a Kaggle Grandmaster, right and that means you do care about kaggle a lot. And I do not expect you to stop Kaggling because it wouldn't be possible right? I can say you like Hey Dmitry, now you actually work for me stop doing calculus, you're at your data that you do in their working hours because you're going to do to do it eventually. Right? You're still going to continue that because that's, that's something that motivates you and drives you. So why don't you just do it officially so you can actually do it you know, during your working hours and even even more you can use extra hardware to become cuddles like and for me, it was a immediately. Like it's basically at that moment, I decided I will join a H2O.ai. So it sounds. Yeah, yes. It was like yeah Shall I should work it should work here. And it's a matter of time I work for h2o and yeah, still can be from Kaggle. You bet. That's it. Yeah, go ahead."
18:14,Dmitry Larko,I was just gonna point out that you still still very active to this day.
18:19,Dmitry Larko,"Yeah, so I, I wouldn't say I'm on the same on the same level, right. So I actually kind of feel myself I'm slightly moving from Kaggle at least, you know, at least the amount of time I spend on kaggle competitions remains low compared to the previous involvement. Well, it's still Yeah, it's still fun. It's still very fun. And there is a lot of things you can learn on kaggle"
18:46,Dmitry Larko,tonnes of things you can
18:48,Dmitry Larko,"go ahead, How have your views and your overview of Kaggle evolved this yearsmas you have competed throughout these years."
18:57,Dmitry Larko,"So Kaggle definitely became a more Are recognisable and respected platform people these days. I mean, thanks to company like h2o thanks to Kaggle itself right thanks to the community, people really start to you know, recognise the Kaggle achievement as something basically which you know, is something basic or something good for something that defines you as a data scientist as of kaggle, in general basically I don't think in the core basically of kaggle remains the same right, there is nothing changed, like, you know, from, let's say, from a gourd view perspective, it's still the same platform is still the same idea. Details obviously changed a lot changes changed a lot and you have a new type of computations, which is actually great, but I wasn't able to participate by like, you know, there is a recent competition by Francois chalet who's basically you know, yeah, that's, that's that's like that's a great competition actually. Right. It's, it's, it's completely different compared to anything else like it says, It's That's, that's something interesting actually. I'm actually always there is a some rumours, basically. And some news about Kaggle can be a platform for AI games, right? So you can actually train your small like a gaming bots and Kaggle and you know, compete with them, which is even better, right? So that's something that I'd never done before. And that's maybe actually a good opportunity to learn, reinforcement learning. And actually, my dear, and I spoke to Anthony Actually, he mentioned him, he mentioned that they were going to have some reinforcement learning competitions, as well. Maybe it is a combination of VA board games or something like that. But yeah, I still see this platform is pretty much the same platform. It was like seven years ago. So yeah, seven years ago, basically, the time I joined is still, you know, extremely open, very competitive environment. But it's it's still I mean, that's something actually what Still, you know, surprised me a lot. It is a competitive platform, right people actually compete into each other. And at the same time, they share a lot of insights about the data, you know, like, I mean, sometimes I'm not even sure I would be able to, you know, to be that effective in this competition without somebody basically sharing the insights because I just, you know, I just use the ideas, combine these minds, and that's basically how we compete these days, you know, you're always just looking to other people's solutions, and just make them better is your is your Yes, and that's it. But it's, it's surprisingly, you know, sometimes you just like you read some, some other people. No, because, like, Is he really doing that? Just basically Sure. That's, that's, that's also because I never thought about that. Like, because you I mean, for you and for yourself, you see that immediate as a competitive advantage, right. Like, you know, I would, I mean, would I say that if I, you know, like, learn about that, and because, you know, for some people that's something obvious right. Like, you I always do that, like, you know, like that. It's nothing. It's not like a secret, magical secret knowledge. But for you it actually can be right. Because it's like, oh my god, yeah, I never thought about that, like, wow. Now I knew that. So that's, that's, that's something that's really, really make cago a unique platform, you know, and really like a platform you can use to learn something like"
22:25,Dmitry Larko,on databases.
22:26,Dmitry Larko,"And if I may say so even though it's gamified sharing is gamified people do enjoy sharing it and as they call it, it's really the home of data science. Really smart people are always sharing their ideas. And it's also a healthy competition, even though it's very competitive, but I would say it's a highly competitive platform."
22:45,Dmitry Larko,"Yes,"
22:46,Dmitry Larko,"yes. I mean,"
22:48,Dmitry Larko,"you know, I mean, obviously, there's some critique on Kaggle being a competitive platform because, yes, and we have to admit that that Kaggle solutions they are not really practical and more of the cases, and that's fine, right? Because it's a slightly different. Yes, there is some critique about the cargo being like, competitive platform. And because of that, that solution you have as a new solution, they're not being very, like real life applicable. And that's true, right? Because you just you just compete to the end and you're just trying to squeeze everything possible from the data. But still a tonnes of insights you found actually during this competition and while building your models can be helpful for for for for competition sponsored, decided decides you can actually you know, you can realise what's the theoretical border of information you can extract from the data from the data set, right? You still can actually it still, if you're a computer science person, sponsors still can be useful for you. You know, even if you know, like yeah, the final solution gonna be like a assemble 1000 models and there's gonna be No, it's never going to end up in the in the production, it's still a nice way to learn something about the data, like, for example, how, let's say if you have a sales, right, how to deal with a cold start, like you have a new product, you know, and your sales and you have no previous historical data to predict the next sales. Is there is anything possible to do in that case? Like, eh, well, potentially, yes, you can find the similar products using clustering. And just based on their historical performance, you can start already predicting something out of thin air basically, you can have at least something, you know, which is usually better than nothing. So and these small insights Actually, yeah, it's it's a it's a it's a very important insights for computation sport. And so unfortunately, in some cases, and that's might be a good I mean, there is a data driven there is another platform for computation called data driven I never actually participated. But from what I heard in these in the computations, you can actually build a final solution yourself, at least it was at the beginning of the of the platform. I mean, as soon as that was the very first competition they held on their platform was exactly like that you just not just win the competition, you also can have abilities to build the final pipeline or to help build a production pipeline. And that's actually quite important because yes, even if you just have basically a single file or several files as I've been in solutions, you have to have an expertise how what exactly is going to be useful for you and what's not. Right And that's, in order to do that you have to No, no not be quiet. Be quiet. Be quiet experienced in that right and that's not all companies actually have. Experience data scientists are quite rare these days. Another"
25:56,Dmitry Larko,"practical aspect that many people don't realise comes out of Kaggle is: The test of cutting edge research machine learning engineers are really drawn to cutting edge research. And if people really work, you'll find it in a solution most probably."
26:08,Dmitry Larko,"Yes, yes, that's that we have a story about XGBoost, right being right next to kaggle actually, because the author of vegetables he promoted on kaggle. And it was one of the best gradient boosting libraries at that time. So yeah, obviously, people immediately starts to use an app like, you know, it was a no brainer, basically, after the Higgs competition, Higgs boson competition, basically, then it was one of the Winning Solutions. And it was very fast compared to Yeah, actually, at that point of time, I think I still use RGB, like he wishes was not that fast at all. And yeah, after that configuration, I immediately switch to Python and start using an extra boost. And then yeah, like competitions. So yeah, and I think the same happened to several hours. ideas, right, like light GBM, pretty much for some kid boost those thoughts, using Go to to promote themselves. Rapid ci from Nvidia they do exactly the same approach we just try because it's Yeah, I think it's still the best way to you know, to learn how you're packaging, I mean, how your product is behave right basically on a more or less real life scenario, because you have a data set, you have a tonnes of people who try and different things is your product is your package, right? And they'll find all mistakes you missed. And they found any algo let's say like, problem is algorithms if you have any, any of them, right. So it's, yeah, it's definitely a good platform to let's say, if you're a researcher of a company who deals so Machine Learning Library kaggle is a good platform to test it and if you obviously, one of the kaggle participant can be competition participants, you can learn about new package like yeah, from the URL and try it immediately. Right, not on your data, but more or less, you know, secure environment on some of our people data without actually you know, risking your your production pipeline. For example."
28:00,Dmitry Larko,"That's a great point as well. Now coming to your teamup strategy, I've I went through your carrier profile and realised your 60% of the competitions are just you as a solo team. And you have also won three solo gold medals. I hope the audience understands how difficult that is. How do you approach the challenges by yourself versus in a team? And do you see any parallels from there of how you team up with the data science team at work? Or when you just the single data science scientists working on an idea?"
28:33,Dmitry Larko,"So yeah, actually, please follow one of these models actually won because I had a bet with my friend. And you know, we had a basically like a one day we had a chat and he's like, you know, what these days is it is impossible to win a solid gold basically, he was like, it's plainly impossible. It's like, no, it's doable. It's hard, but it's doable. And he said like I bet like, I bet like 10 bottle of bottles of wine actually, you won't be able to do that. Like okay. Let's try it. So I want them but also why not just like salgo and yeah, it was a pleasant surprise yeah because you know by the end of the day in some configuration section was true. Especially for the first places you can just mean by a pew pew pew billions of light basically right pure pure chance because mostly in some way I won't say much about the all computations but in some computations, but it's definitely not a huge, statistically significant difference but in the first place, and even listen differently, the second and maybe even the 10th basic right, it's sometimes just like, you know, more or less pure noise, but still still, it was valuable information and was one of the solid walls but you're right by saying like most of my competitions, I participate Sala and that's actually already tells you a lot about my teaming up abilities. I don't know how to team up most of the time actually because most of the time I do my competition salon, but from my teammates, experience what they can say, for me, and that actually, that worked for me and my teammates, we start competing, maybe even, you know, like a solo, you know, independent of each other, at least for at the start of the competition, and why it's important because in bed case, you can first of all, you're kinda motivated to learn more about the data yourself, right? Because, you know, nobody's helps you to do that. Right? You're not relying on anyone else's, like, Yeah, I just have to look at the data, myself, and I have to build a pipeline myself. And I have to do everything myself as kind of helps you, you know, to, to frame the problem inside your head, right, like in the right way. The second even more important point. We try to with my dad, actually, we do a couple of competitions, then we immediately team up and share ideas. And they found within that case, our models become extremely biassed. Hmm. Because we share ideas we basically repeat ourselves right? Yeah, not try anything else."
30:59,Dmitry Larko,And
31:01,Dmitry Larko,"If we don't do that, right, our final models become some bias basically, right? And we can actually, you know, and summon them together, you can you can we can achieve better, better score. What can be shared, actually, especially during the competition, and I'm talking mostly about the tabular data data set, the data sets competition right now. It's you can share your datasets, not the code, because actually code is very hard to, you know, to read and understand that, you know, especially if you don't, I mean, you can do that, but it's a, it will require you that a lot of time, it's so much easier just to share that data set, you know, hey, that's my data set, then the cave is mind that I said, I'm just trying to do two different bundles on using each our data set on the other combination. But that's actually helpful again, at the middle or close to the end of the competition, because before that, you have to just design these data sets and the less bias you do in this design phase, the better actually, the second approach what we did As a our, in our teams not just as my dad, but with our participants we had a pretty much the same story, but we had we we have a person who basically spent his time looking for cago discussions cuddled kernels, any code to find something, you know, like insights ideas, you know, some interesting approaches right. So, he was basically like a scoured base right is searching for for environment for us and in order to not miss anything, you know, like, which are people already shared or you know, already used to them. And so, again was quite helpful. Also, this person actually able to do like a search of research papers, right. So here, you know, like, find some novel ideas in this domain, or like a standard use in this domain. So that was, that's, that could be a nice role actually, in like, you know, for any kaggle competition, like a person who is just, you know, search, do research, just for ideas for the For the team for deep learning competitions, like you know, if you the conditions like for example computer vision, I don't have any like a specific strategy yet. But it's the whole field actually is quiet. It's not as basic right there is a tonnes of things you can do with a neural net like how exactly to train it what augmentation library to use what augmentations to use, how to you know, how to manage my learning rate? Should it be like, you know, reducing the plot to approach should it be like a cosine, an alien, basically or something else? Right? It's there is a tonnes of things you can do basically, right? What architecture to use, like how to use it, what to what, what lanes, my architecture to train, how to represent my data service is that basically requires in this type of computation is basically you need to, you need to know what you're doing right. And it's very, it's a It's I would say to me it seems like it's very hard to have a you know, like unbalanced teammates so let's say if you're not same level of expertise like more or less obviously right? It's okay but it's somebody who you know like like really high up compared to you for example you will end up basically listen to him because you have no idea what's happening around right. And that can be can be quite challenging if you if if expertise in let's say in the in the team is exactly is more or less the same you can basically you know, split the roles basically right you can then say hey, I'm trying to train efficient men for example family using this image like okay, and that case I will try to do like you know, I'll try out like I don't know like arcs arc sine laws basically like or something like that. So like, you know, something like analogue z laws basically to my to monitor to see here is behave better, not somebody that but in that case, you know, the to split his roles, you have to be on the same page, right, that's fine peek in that case. In the same level of expertise are quite important. Because otherwise you'd be it'll be harder for you to be on the same page. So, yeah, I would Yeah, for discipline I definitely don't have a like exact strategy to do it just my thoughts basically, from my experience, but I, I, I don't think of myself as an expert in computer vision on on in Japan in general, and just start to learn that but it's a it's a nice field, actually. So it's kind of fun."
35:26,Sanyam Bhutani,"And as you mentioned, great data scientists start to have great intuition for building models and the complete pipeline. And that brings me to I went through your profile and realised usually Kagglers have a preferred one style of competition. And you have actually meddled in NLP computer vision time series, sales related competition. So if you were to pick one, which is your favourite, and do you have any favourite battle stories from any of the competitions that you've competed in, throughout these years"
35:59,Dmitry Larko,"Yeah, well, my favourite competitions is the is actually the Deep Learning competitions and the reason why because it's so much less time consuming compared to heavier data. It's like, you know, I mean, it's definitely more power consuming, right? So it's more like a calculation in the GPU can seep in for sure. But your time as a human being, you're almost like, you're almost free to do whatever you want. Because, you know, I mean, definitely, let's say it's your start the computation you spend a first several days building a pipeline, looking at the database, if you're trying to understand how exactly you organised your training process, but as soon as this is pipelined, from the roll images to the submission is done. It's magically became you know, like, almost like a zero time effort. Competition, because, you know, you just hit the button. Yeah, it trains for next 10 to 12 hours, for example, right? You, you basically, let's say during the night, you've made your Training right at the moment you just you just woke up you know, look at the tensor board graph you know plots and you know like a change something basically right like adjust some change architecture change you know like a learning rate schedule or something and run it again and you're done basically, or basically is maybe continue to train or one of my favourite battle story was actually Airbus ship detection competition. It was my second it was an object segmentation competition. It was my second object segmentation. British and I participated. And our winning solution we end up on 16th place basically but it's not very like a high achievable place. But what I like about the solution, it was a single model. It wasn't assembled it wasn't nothing was a single model, almost with zero post processing of the of the mess sexually. and looked at each of these Moodle actually it was you know, I run the model for 100 people Folks, next morning, I check it run it for an hour 130 epochs. So basically, I trained for 700 epochs basically, it took me almost a week to train on the four GPU machine, but that's okay. You know, I'll just continue to train the same model, you know, over like, again and again, you know, like, I never 100 epochs and about 180 epochs an hour 380 epochs was still better, you know, like a previous like, let's continue to train it. So that's it, you know? Yeah. So, basically, I literally spent like, five minutes, you know, just just check the plots change very, you know, amount of epochs trying to, you know, to continue training. And that's it. That's it. I was like, Well, actually, obviously, it wasn't like that, because I had a second machine. I tried different, different approaches, which never worked. Actually, this you know, it was a pretty much it was a quite simple network. It was quite simple. quite simple. architecture was quite simple pipeline, but it worked for some reason. Yeah, we end up in sixth place, you know, just like bye Using this single model, well, obviously by saying single model, I mean, it was basically not what we had, we have a five folds, right, and you just train the model using five folds predict on the left on the four folds predict the remaining folds. And you repeat this five times. And then as your final model, you just basically average the results of his five network. So basically, that's something called begging basic. Right? So yeah, that stabilised your results for sure. But it's still the same approach the same model, right? There's nothing it's the same architecture, it's nothing, nothing, nothing, nothing, nothing different."
39:33,Dmitry Larko,That speaks to new Kagglers like me. This was my first mistake on kaggle in my first competition is competition to try the biggest model out there and not try the simplest model out there. Sometimes even the simplest models can produce great results.
39:46,Dmitry Larko,"You know, to support you I I did exactly the same mistake in one recent competition. Actually. It wasn't the competition for for the medals. It was I think it was like us If you have to classify the disease on the apalis, like there's several disease you can classify. And what I actually done is just, you know, I just took my pipeline, a very complex topic from another computation, I just run it for a week. And the result was a extremely terrible basically, it was like, you know, like, it was not even close to anything, basically. And I was like, Oh my god, you know, I mean, I'm almost like a single Grandmaster who participate in this competition. Like, everyone else is just like, you know, like a, like a students basically, because there is no points for it. And I was like, okay, so it was actually you know, like a really good lesson to learn to start simple base, because as soon as I started simple, I immediately realised what actually was running my augmentation schema, which basically ruins the whole network. Another basically stops to low enough to some point of time because it's because it's because it's never sure. And then, and in some cases, the Classification of Diseases He is supposed to be a very fine grained details basically. And by my by my augmentation, I completely remove his fine grained details. So there is no, it's not able to tell actually the difference between the diseases just because you know, there's no details left. So, yeah, it was a good lesson long lecture. It's and I still perform actually quite bad on this computer and I end up on the bench or something, but, you know, it was fine. At least I, you know, I found my mistake. And instead of being like, 400, something, I became actually 20 something."
41:29,Dmitry Larko,"Okay, you'll notice would have failed 10 times a grandmaster would have failed thousands of times, if I may augment the saying."
41:36,Dmitry Larko,"Yeah, yeah, you can say that actually, like, and especially, you know, I actually, I really, really failed on the Bengali."
41:48,Dmitry Larko,"You know, there's a"
41:51,Dmitry Larko,"Bengali grapheme recognition, basically, right? So you can have tonnes of different symbols. Basically, you have to place him correctly, and I felt this competition. So basically what I do right now I'm just building my own pipeline using the solution from, from my winning teams. And I already found basically, the reason why my solution actually fail. And I think that's the most important part of the kaggle competition is to learn your mistakes. Because, you know, let's say why it's important, actually, it's important because let's say if you compete on some condition, you spend hours, right building the very best of your approach. I mean, you're just not just doing like a like, for for nothing, you're just you're actually trying to build as, as good as possible as you think it can be good as possible. And if you fail in that, it's immediately like, you know, you have a like a bug in your head, like say, like, why, why, why, why, why, why, why and fail. And that's how you actually go to the Winning Solutions, read the code and understand and this knowledge will stay with you for a long time because you know, because you failed. Now you know how to fix it. The whole human psychology actually walks around and actually the whole machine learning actually teach us you know, you can you can learn from the success Learn from the mistake. So, there is I mean all machine models they basically learn from the mistakes. If you predict the class correctly there is nothing to learn. It's learnt already. The same actually goes for cago competition in general if you win the competition it's like you know you might be even have no idea what exactly actually helps you to get it. If you lose it, you can compare your solution with a winning solution and understand what actually bring you to this brought you to the to the place you actually end up is"
43:29,Dmitry Larko,similar to competitive sports where even if you lose you spend hours analysing both your game and even the winners game so that you can perform better next time.
43:39,Dmitry Larko,"Yeah, I mean,"
43:41,Dmitry Larko,"it is important to be among the losers, let's say to learn Winning Solutions because you have to see the both sides of the medal if you're one of the winning basically, you know, like you're trying to avoid the survival bias basically, right. If you learn from only from success, it's it's it won't lead you to anything. You have to learn from the failures. Ideally, it should be our people failures in real life. It's your failures, failures, because nobody learns from our people failures. I mean, it's, I mean, it's, yeah, it's an ideal world. We don't we don't live in an ideal world. I just, I'm, I'm trying to learn from other people's failures. And I am actually able to do that just Yeah, but if I fail something, yeah, I'm definitely on that. For example, by heart, and he is the same, right? If you have to try something yourself, right? Like for example, let's say if you somebody asked me about advice, how to start competing on kaggle obviously, it is a good idea to start from a previous competition, but you have to try it in your them yourself without looking to the union selection test. Because you need to have this example you know, you compare two best let's say right because if you don't just the best, you You won't understand this difference, right? What exactly brought you to the to the best because"
44:54,Dmitry Larko,and even even
44:56,Dmitry Larko,"even by reading, winning solution, especially for tabular data, right It's a, it's always important, you know, after installation you have like, okay, yeah, we built these features like, and we built this model we done yeah, we want. But the question is actually the right question to answer to ask him to find the answer, how exactly the team came up to these features? Like, what's the thought process around it? Like, was was his like, was a random search? It could be actually just random search. Who knows? Like, if you're not a domain expert, that's potentially it's obviously killing some sort of some sort of random search because you have no idea about the domain and you don't have a domain knowledge but in general case you that's it that's a very important question to answer how exactly people came up to this solution, not to the solution itself. And obviously, nobody will tell you that because not just because they secretive because you know, at the end of the competition, you have no idea so much happened during tuition so you just don't remember how exactly you came up to this like, you can, you know, you can say like it was a blind luck and you will derive it Yeah, I've kind of got lucky to some extent Yes, you you you just you know, you just throw random stuff to the validation schema and because evolution schema is good you just like yeah, you're just something that remained basically but that's why I think it's important even for pass competition is try to build your own solution and then compare your solution to the winning solution that's actually helps you to build you know, the understanding was you will see the difference basically right and you can able to learn from this difference"
46:28,Dmitry Larko,certainly what What challenges do you look for today? You still I would say pretty active on kaggle you might disagree but What challenges do you look forward to the on Calvin?
46:39,Dmitry Larko,"I like I like competition competitions. Yeah, I"
46:45,Dmitry Larko,"yeah, I don't think I'm actually very good in an LP competitions and I don't feel myself extremely motivated to come to compete on an LP competitions, tables or data in time series is a very time consuming so it's maybe Might the participant then like, you know, here and there, but yeah, most of the time I'm kind of deploying the fascinates me basically. And I would like to continue compete on these competitions. And obviously something new, like reinforcement learning would be really nice and fun to start."
47:18,Dmitry Larko,"Okay, coming to your, what you're also doing during your day, you also calculate a stew but you're the chief data scientist at issue allottee what tasks are you working on? And how has kaggle helped you at work? How is Kaggle helped you become a better data scientist?"
47:38,Dmitry Larko,So
47:40,Dmitry Larko,"well Kaggle yeah Kaggle basically Yeah, it was a tremendous help and what I do in my like day to day data science job right. Because we it the company, we build an automation automatic machine learning framework, right? And that's basically idea is quite simple. It just give us data we will train a model for you, obviously See the devils in the devil is in the details right? There is a tonnes of complex and challenging problems in that, but it's a steal kaggle helps you to, you know, first of all, during my kaggle experience I built for myself like a different libraries, right. I'm just continue to reuse an new data competition. And that's actually helping to define what I'm usually do for computation, right, what feature transformations and engineering technique I can use, almost in any any attempt on any tabular data set, right? Yes, it won't replace the domain is that expertise, right? It has specific domain expertise for the data. Yeah, sure. It's, but it's still it's a very good like start and you have a really really generalizable approaches for any given data and there's that that's something I built for myself and from a company thanks to Kaggle and Kaggle still helps us to be on the on the each of the research and each You know, on the tool sets, you can use approaches, approaches, techniques, tips and different tricks, right. It's it's, it's still like a vast treasure trove basically for for machine learning experts. So yeah, that's for me is the Kaggle basically helped me to keep in shape on find something new for the products we build right now."
49:24,Dmitry Larko,"Talking about products. driverless is currently one of the answers byto auto ml. What features pun intended, did you contribute to or were you involved early in the development of driverless?"
49:37,Dmitry Larko,So yeah.
49:42,Dmitry Larko,"So basically, the story starts off like foremost three years ago, right? For the DriverlessAI. And Sri, our CEO approached me and asked me like, Hey, can you build in order, let's say some sort of a general script, like you know which script you can use on any Kaggle tabular data. gives you more or less good school like, you know, good prediction, basically on a leaderboard, not the best one, obviously, but something good, you know, something reliable, something like, achievable and more or less straightforward. I was like, Sure, yeah, I can do that. I and I sat and I realised I have no idea how to do that I've never had actually, you know, like a Gen script which transform you. So I decided to build one. And that's how that was how I basically started. So, for those four damacy I built a feature engineering part. So because at that moment of time, and actually even right now, more or less all parts of the machining and modal delian is more or less optimised, can be automated, right? Like for example, you can fine tune features yourself, and that's great. Or you can just, you know, run something like hyperopia or Optima to find the best feature for you. From the other hand, the feature representation process wasn't automated at all. Right. And I just said, Okay, how can I automate that? Obviously, you can just, you know, you can, you can do like, random sync approach, right, you can basically take your data, take all the transformation possible, combine them together, get a huge data set, and work with that, but the data set becomes too huge. And it's it's really becomes like, you know, like, tremendous. So I decided to design the system, which actually find the most effective feature representation. And that's how the car started it based on a genetic algorithm space. Like in a nutshell, we do some tricks here and the button in like, as I might approach it was a genetic algorithm. Okay. You, you and you, and yeah, and that's it. That's what was that's what they built. And, you know, I spent three months actually building that and after three months, we had the first version of driver ci, and we showed this first question on GTC conference, and it was pretty successful. festival demonstration, actually. And that's how it started. Obviously, I have to mention like, yeah, it wasn't just me, obviously, right? There's a tonnes of people involved. Very smart software engineers. So nowadays the tool is extremely robust that can work on multi node. So something I have no idea how to build basic, right. But it's, it's done it basically as it started as a two files, one Python library, which contains some transformations and the code and one Jupiter notebook to show to show how it's how it's actually works. And yeah, it's kind of fascinating to see what it became these days."
52:36,Dmitry Larko,"You also hinted to how Sri approached you and how you made the switch allows me to transition into this question, what is the makers gonna make philosophy mean to you? What does it stand? What does it mean to you?"
52:50,Dmitry Larko,"Well, in general, like, you know, like, maybe that's, I would say it's taken responsibility, for for Not just for the, for the company, basically what company direction because free allows that LSU allows us to do what we think, useful for the products for product products over from a company in general. So nobody actually tells me what I'm supposed to do on my, you know, day to day like, This isn't like, you know, we have a one on one meeting fishery and he's like, Hey, you know what, maybe you want to do this, you're supposed to do this, this and that during this way. Now, it's more like, what, how can I help the company like, and as soon as you see some problem, you're just trying to solve it. If it's if you if you feel yourself capable of solving if you just try and solve it until have solved so that's basically to my understanding, that's the philosophy of Makers gonna make you know, taking responsibility and get things done. Just you know, in a nutshell, that's That's it. That's it and yeah, and sometimes, yeah, I think get things done. It's a very nice way to say it. I guess in some cases, it's might be Not the best solution at night, but it's something instead of nothing. And that's how the whole process actually started. It's like a it's a very complex problem, what am I supposed to do? Like, just do something you know, and you'll even learn in the process how to do it better. Because, you know, emotional Still, we don't have a strong like, you know, extremely strong theoretical foundation in machine learning, compared to let's say to mathematics and physics in general. So a lot of things you just like the whole different space actually is a is a is a set of tips and tricks. It's like alchemy, basically. Right? We don't have a game, this spherical foundation that helps us to derive and new insights, new models out of our just out of a strong theory. So and that means the you're required to have a lot of practical exercises on any approach you're trying to invent Even so, you Southern problem, you see a lot of practical examples and during the process itself, iterative process you become you make social debate you making your social better and better and better. And that's again it's I think it's a that's a part of philosophy of makers gonna make now just build it in improve it constantly."
55:13,Dmitry Larko,"If I may point out I always mentioned on the show that Chai data scientists have free podcasts for the audience had free podcast. But that is because H2O allows me to do this crazy idea of having Chai and asking stupid questions to really smart people like you. And that's that's the reason that I can do this during the day and even train this as a service to the community. So if that's really what the philosophy, as you mentioned, stands for."
55:35,Dmitry Larko,"Yeah, exactly. Yeah. Obviously, we bought bias we both work for H2O.ai"
55:42,Dmitry Larko,Yes. Yeah.
55:44,Dmitry Larko,"Now we just have to make this disclaimer, right. Like, yeah, we both work for H2O.ai. Yeah. And we both thin the company is great, we're biassed. Yeah, totally."
55:52,Dmitry Larko,"But now coming back to the challenges you're working on today. You enjoy working on tough problems, word problems. currently solving at H2O.ai or what products are you currently focused on?"
56:05,Dmitry Larko,"No, I'm actually I don't feel myself enjoying working on this. I'm actually extremely scared by tough problems, you know, like, Oh my gosh, what am I supposed to do? But it's, you know, it's like, what motivates me just to try to sell them because it's so much fun, right? I mean, obviously, you trying to forget about, you know, like, hey, it should be sold. Because that might actually stress you out, right? Because you don't want to be stressed out, you know, don't want to be under the stress, right? You just want to say, Okay, you know what, I need to, I need to think about something. I mean, I just need to play with it. I think the you know, yeah, it's more or less like a, like kids playing these the toys. Right? It should be that motivation that. That that's, that's something that opens creativity. Otherwise, yeah. If you're under the stress and somebody's like, say like, Hey, are you supposed to do that, like, you know, the next month or two? Yeah, that can kill you completely, basically, and you won't be able to do anything."
56:59,Sanyam Bhutani,"The maker mindset, If I may,"
57:01,Dmitry Larko,"yeah, yeah, that was basically if you're under stress, you just, you will be to do something, but it's mostly gonna be some other people's solutions. You know, just we'll just take something that works because you have to be shot. And you just implement it. And you don't you won't be able to experiment if you under this threat. So it should be like a very, like a joyful, playful mood to do anything like that. Because you and one of the back to the question, so one of the really complex and challenging problem. I'm not I'm not even sure I'm saying like I am working on it. I'm just trying to approach it from different angles, without any success. So it's, like say no, as of now that I say works on the quiet, strict setup, you have a table in each table you have for each row in your table, you have defined target, and that's something we can do. But in general life right you in your database, many measurement system, you have a tonnes of tables, you so you have to design this data set first. And I'm just thinking about it, when is it anyway, of automatic or semi automatic is human in the loop solution, we can actually help you to design this table, you know, more or less automatically. And it's doable it in a straightforward way you can do it on I mean, it's not a question actually, it's very easy to do it in a in a straightforward way. But you will end up with a basically your your search space in terms of features engineer, there's going to be exploited, it's going to be almost like it's tremendous, basically. So when I'm start thinking about is any effective way to you know, not just to create all features possible, like you know, for the table while joining different tables in your data set, and in your database, creating your data set, but find the most important ones, right, you know, like the most useful one which contains signal compared to just noise or whatever. And that's a Yeah, that's actually quite hard problem to solve."
59:04,Dmitry Larko,a tough question. What do you think? Is one of the underrated aspects of auto ml?
59:12,Dmitry Larko,"Oh, it's a tough question. Actually. It's underrated,"
59:19,Dmitry Larko,"I think,"
59:21,Dmitry Larko,"thanks to some companies and some marketing campaigns, data scientists and some case things that ultimately stand to replace them. Right? So it's gonna be better than a data scientist. It's not now, just like no. And the reason why is because it's up to you to design a data set, because your data to basically represent the business problem you're trying to solve. And those are two major, extremely important pieces, which we have no idea how to replace human for it's the data set itself, like, like I explained before, I somebody have to design the data, and somebody has to define a validation schema. How exactly you're gonna to check your, your your database, right. And in most in most real life scenarios, your data is has some strange time dependency or cohort dependency. And you have to make sure you actually consider that and you have to tell the auto ml tool, what's you what you expect how exactly you expect this validation schema validation to be performed. And you're still supposed to do that. So to me or ml is mostly for as a time saver, right? It's not like a replacement for for anyone but it's a time saver, it's helps you to understand. So let's say you design your, your table, you're trying to you know, build your model on and ultimate tool basically helps you to understand these are the right database that you put on this table. Maybe you should add something more like you know, some some something else, like some more database, because, you know, in your in real life compared to cago. You don't find your new model to the third digit after the decimal point right. You normally never do it, nobody cares. If you see if you want to improve your model basic, you just add additional data sets and add additional data basically, right? Let's say if you have sales, you cannot work on data, right? You can add a CPI like consumer, consumer indexes, different indexes, basically the data, different prices, the market behaviour, if you want something that's basically, you know, make your data set richer, you don't actually just fine tune model on the small data set, you're just trying to get more data, more and more data, do a feature selection maybe, right and that's how you build your final model. And ultimate can can hear can help you because you know, it's basically instead of thinking about feature representation, just you know, you just put the data centre totemo to see what score and if it's the score you would like to achieve. You already can use it or if you can think of ultimate tool as a as a baseline. Okay, you know, my old demo to build me like an AUC of . 90 .92 can I beat it, basically Then build  .93. Let's see if I spent two hours or two days, for example. And in some cases, you can, in some cases, you cannot actually, I mean, obviously, if you spent two months or so you will beat out demo score for sure. Like, that's not the question actually is. But if he, if you mean if you have these two months, basically, but if you don't you just you know, you can use it as as a piece and it's already good enough for most of the practical cases."
1:02:24,Sanyam Bhutani,"Like you said, it's really a tool."
1:02:27,Dmitry Larko,"Yeah, it is just a tool. It's just another tool in your tool and in your in your tool belt, it's not going to go not going to replace it replace you to any to any extent, it just helps you to build a model understand the data, see the you know, like a different pitfalls. So again, it's just a tool. And for professional data scientists, he can, I mean, professional data scientists can use anything to his advantage right? candlestick math can be you know, like a new or a new, a new article, basically in some scientific journal doesn't matter. Just still gonna be advantage."
1:03:03,Dmitry Larko,"So coming to the final question of the interview, if you were to give one best advice to Kaggle newbies in 2020, what would be the best advice?"
1:03:12,Dmitry Larko,"Ah, I would I will do a kind of controversial advice actually. Right. But I think having a good software skills is mandatory software engineering skills. Yeah. Because that's something you won't be able to learn on kaggle. Right. So anything else you definitely can be, but kaggle code is kaggle code. You know, nobody writes it back. I mean, honestly, I never, I mean, my code is terrible. Actually, the code I write and calculate, I never showed anyone actually is it is just it just is just simply terrible. So that means that's the only skill you won't be able to learn on kaggle. It's how to write good code. So let's say if you're, if you spend some time just learn how to write a nice Python code, there's definitely going to be extremely helpful because it can be helpful in two ways. Two ways. First of all you're going to be you're going to write a clean and nice code, which is always beneficial. You know, no matter what you're going to do next in your life, it's I mean, if you, if you connect your life is it it's it's definitely helpful, no questions asked, right? But also, you will spend tonnes of time looking at other people code. And if you have experience and if you know if you so basically, the fast you can read our people code the better, right? So that something you can Yeah, that's definitely something you can learn outside of cago. Also, maybe, but that's something you can learn on kaggle is all right, so you just you just and don't, don't hesitate. Don't hesitate to start actually competing. Don't do like me Actually, don't spend six months just learning some from outside of kaggle just stop competing immediately. If you fail, you're just doing tonnes of thinking the process right and especially because that won't be actually important. But if you continue to do that, you know the next let's say, first competition, you can You can be in like saying top, like in a basically in a bottom list of the computer participants on the top one. But if you continue to do that you find yourself to your own surprise, like being a top part of the list and the bottom one. It just just requires, you know, consistency and constant"
1:05:17,Dmitry Larko,"work basically, it's"
1:05:19,Dmitry Larko,"like, like how we started this interview?"
1:05:21,Dmitry Larko,"Yes, yeah, exactly. So basically, it's all about just being constantly involved, let's say now, in other words,"
1:05:30,Dmitry Larko,"that's amazing advice. Before we end the call Dmitry, I'll have your profiles linked in the description if you'd like to mention any platforms where the audience can follow you."
1:05:42,Dmitry Larko,"I have a Twitter account. Actually, it's I don't remember. I don't remember. I think it's Dmitry Larko or something like that. So I think it's easy to find me on Twitter. Let me check."
1:05:54,Dmitry Larko,I'll have it linked in the show notes as well for anyone yet.
1:05:57,Dmitry Larko,It's it's
1:05:58,Dmitry Larko,"a local basically and that's Yeah, don't Have any I do have a Facebook? But it's I tend to keep a Facebook to people I really like no you know in a physical world but in Lincoln Yeah, I usually connect to everyone. And you can follow me on twitter but I'm usually extremely silent, silent, silent on Twitter. So, maybe there is no point of following me because I don't"
1:06:24,Dmitry Larko,you know don't
1:06:26,Dmitry Larko,"publish too much actually to say well, okay,"
1:06:30,Dmitry Larko,"awesome. Dmitry, thank you so much for joining me on this podcast and for all of your amazing insights that you shared."
1:06:37,Dmitry Larko,Thank you for having me here. Yeah.
1:06:44,Sanyam Bhutani,"Thank you so much for listening to this episode. If you enjoyed the show, please be sure to give it a review or feel free to shoot me a message. You can find all of the social media links in the description. If you like the show, please subscribe and tune in each week, to ""Chai Time Data Science."""
